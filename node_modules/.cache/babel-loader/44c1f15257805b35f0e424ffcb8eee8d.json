{"ast":null,"code":"/*!\n * Unidragger v2.3.1\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n(function (window, factory) {\n  // universal module definition\n\n  /*jshint strict: false */\n\n  /*globals define, module, require */\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['unipointer/unipointer'], function (Unipointer) {\n      return factory(window, Unipointer);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('unipointer'));\n  } else {\n    // browser global\n    window.Unidragger = factory(window, window.Unipointer);\n  }\n})(window, function factory(window, Unipointer) {\n  'use strict'; // -------------------------- Unidragger -------------------------- //\n\n  function Unidragger() {} // inherit Unipointer & EvEmitter\n\n\n  var proto = Unidragger.prototype = Object.create(Unipointer.prototype); // ----- bind start ----- //\n\n  proto.bindHandles = function () {\n    this._bindHandles(true);\n  };\n\n  proto.unbindHandles = function () {\n    this._bindHandles(false);\n  };\n  /**\n   * Add or remove start event\n   * @param {Boolean} isAdd\n   */\n\n\n  proto._bindHandles = function (isAdd) {\n    // munge isAdd, default to true\n    isAdd = isAdd === undefined ? true : isAdd; // bind each handle\n\n    var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n    var touchAction = isAdd ? this._touchActionValue : '';\n\n    for (var i = 0; i < this.handles.length; i++) {\n      var handle = this.handles[i];\n\n      this._bindStartEvent(handle, isAdd);\n\n      handle[bindMethod]('click', this); // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n\n      if (window.PointerEvent) {\n        handle.style.touchAction = touchAction;\n      }\n    }\n  }; // prototype so it can be overwriteable by Flickity\n\n\n  proto._touchActionValue = 'none'; // ----- start event ----- //\n\n  /**\n   * pointer start\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n\n  proto.pointerDown = function (event, pointer) {\n    var isOkay = this.okayPointerDown(event);\n\n    if (!isOkay) {\n      return;\n    } // track start event position\n    // Safari 9 overrides pageX and pageY. These values needs to be copied. flickity#842\n\n\n    this.pointerDownPointer = {\n      pageX: pointer.pageX,\n      pageY: pointer.pageY\n    };\n    event.preventDefault();\n    this.pointerDownBlur(); // bind move and end events\n\n    this._bindPostStartEvents(event);\n\n    this.emitEvent('pointerDown', [event, pointer]);\n  }; // nodes that have text fields\n\n\n  var cursorNodes = {\n    TEXTAREA: true,\n    INPUT: true,\n    SELECT: true,\n    OPTION: true\n  }; // input types that do not have text fields\n\n  var clickTypes = {\n    radio: true,\n    checkbox: true,\n    button: true,\n    submit: true,\n    image: true,\n    file: true\n  }; // dismiss inputs with text fields. flickity#403, flickity#404\n\n  proto.okayPointerDown = function (event) {\n    var isCursorNode = cursorNodes[event.target.nodeName];\n    var isClickType = clickTypes[event.target.type];\n    var isOkay = !isCursorNode || isClickType;\n\n    if (!isOkay) {\n      this._pointerReset();\n    }\n\n    return isOkay;\n  }; // kludge to blur previously focused input\n\n\n  proto.pointerDownBlur = function () {\n    var focused = document.activeElement; // do not blur body for IE10, metafizzy/flickity#117\n\n    var canBlur = focused && focused.blur && focused != document.body;\n\n    if (canBlur) {\n      focused.blur();\n    }\n  }; // ----- move event ----- //\n\n  /**\n   * drag move\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n\n\n  proto.pointerMove = function (event, pointer) {\n    var moveVector = this._dragPointerMove(event, pointer);\n\n    this.emitEvent('pointerMove', [event, pointer, moveVector]);\n\n    this._dragMove(event, pointer, moveVector);\n  }; // base pointer move logic\n\n\n  proto._dragPointerMove = function (event, pointer) {\n    var moveVector = {\n      x: pointer.pageX - this.pointerDownPointer.pageX,\n      y: pointer.pageY - this.pointerDownPointer.pageY\n    }; // start drag if pointer has moved far enough to start drag\n\n    if (!this.isDragging && this.hasDragStarted(moveVector)) {\n      this._dragStart(event, pointer);\n    }\n\n    return moveVector;\n  }; // condition if pointer has moved far enough to start drag\n\n\n  proto.hasDragStarted = function (moveVector) {\n    return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\n  }; // ----- end event ----- //\n\n  /**\n   * pointer up\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n\n\n  proto.pointerUp = function (event, pointer) {\n    this.emitEvent('pointerUp', [event, pointer]);\n\n    this._dragPointerUp(event, pointer);\n  };\n\n  proto._dragPointerUp = function (event, pointer) {\n    if (this.isDragging) {\n      this._dragEnd(event, pointer);\n    } else {\n      // pointer didn't move enough for drag to start\n      this._staticClick(event, pointer);\n    }\n  }; // -------------------------- drag -------------------------- //\n  // dragStart\n\n\n  proto._dragStart = function (event, pointer) {\n    this.isDragging = true; // prevent clicks\n\n    this.isPreventingClicks = true;\n    this.dragStart(event, pointer);\n  };\n\n  proto.dragStart = function (event, pointer) {\n    this.emitEvent('dragStart', [event, pointer]);\n  }; // dragMove\n\n\n  proto._dragMove = function (event, pointer, moveVector) {\n    // do not drag if not dragging yet\n    if (!this.isDragging) {\n      return;\n    }\n\n    this.dragMove(event, pointer, moveVector);\n  };\n\n  proto.dragMove = function (event, pointer, moveVector) {\n    event.preventDefault();\n    this.emitEvent('dragMove', [event, pointer, moveVector]);\n  }; // dragEnd\n\n\n  proto._dragEnd = function (event, pointer) {\n    // set flags\n    this.isDragging = false; // re-enable clicking async\n\n    setTimeout(function () {\n      delete this.isPreventingClicks;\n    }.bind(this));\n    this.dragEnd(event, pointer);\n  };\n\n  proto.dragEnd = function (event, pointer) {\n    this.emitEvent('dragEnd', [event, pointer]);\n  }; // ----- onclick ----- //\n  // handle all clicks and prevent clicks when dragging\n\n\n  proto.onclick = function (event) {\n    if (this.isPreventingClicks) {\n      event.preventDefault();\n    }\n  }; // ----- staticClick ----- //\n  // triggered after pointer down & up with no/tiny movement\n\n\n  proto._staticClick = function (event, pointer) {\n    // ignore emulated mouse up clicks\n    if (this.isIgnoringMouseUp && event.type == 'mouseup') {\n      return;\n    }\n\n    this.staticClick(event, pointer); // set flag for emulated clicks 300ms after touchend\n\n    if (event.type != 'mouseup') {\n      this.isIgnoringMouseUp = true; // reset flag after 300ms\n\n      setTimeout(function () {\n        delete this.isIgnoringMouseUp;\n      }.bind(this), 400);\n    }\n  };\n\n  proto.staticClick = function (event, pointer) {\n    this.emitEvent('staticClick', [event, pointer]);\n  }; // ----- utils ----- //\n\n\n  Unidragger.getPointerPoint = Unipointer.getPointerPoint; // -----  ----- //\n\n  return Unidragger;\n});","map":{"version":3,"sources":["C:/Users/LabJH/Documents/yamir/cit/minaposento/node_modules/unidragger/unidragger.js"],"names":["window","factory","define","amd","Unipointer","module","exports","require","Unidragger","proto","prototype","Object","create","bindHandles","_bindHandles","unbindHandles","isAdd","undefined","bindMethod","touchAction","_touchActionValue","i","handles","length","handle","_bindStartEvent","PointerEvent","style","pointerDown","event","pointer","isOkay","okayPointerDown","pointerDownPointer","pageX","pageY","preventDefault","pointerDownBlur","_bindPostStartEvents","emitEvent","cursorNodes","TEXTAREA","INPUT","SELECT","OPTION","clickTypes","radio","checkbox","button","submit","image","file","isCursorNode","target","nodeName","isClickType","type","_pointerReset","focused","document","activeElement","canBlur","blur","body","pointerMove","moveVector","_dragPointerMove","_dragMove","x","y","isDragging","hasDragStarted","_dragStart","Math","abs","pointerUp","_dragPointerUp","_dragEnd","_staticClick","isPreventingClicks","dragStart","dragMove","setTimeout","bind","dragEnd","onclick","isIgnoringMouseUp","staticClick","getPointerPoint"],"mappings":"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","sourcesContent":["/*!\n * Unidragger v2.3.1\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'unipointer/unipointer'\n    ], function( Unipointer ) {\n      return factory( window, Unipointer );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('unipointer')\n    );\n  } else {\n    // browser global\n    window.Unidragger = factory(\n      window,\n      window.Unipointer\n    );\n  }\n\n}( window, function factory( window, Unipointer ) {\n\n'use strict';\n\n// -------------------------- Unidragger -------------------------- //\n\nfunction Unidragger() {}\n\n// inherit Unipointer & EvEmitter\nvar proto = Unidragger.prototype = Object.create( Unipointer.prototype );\n\n// ----- bind start ----- //\n\nproto.bindHandles = function() {\n  this._bindHandles( true );\n};\n\nproto.unbindHandles = function() {\n  this._bindHandles( false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd\n */\nproto._bindHandles = function( isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  // bind each handle\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n  var touchAction = isAdd ? this._touchActionValue : '';\n  for ( var i=0; i < this.handles.length; i++ ) {\n    var handle = this.handles[i];\n    this._bindStartEvent( handle, isAdd );\n    handle[ bindMethod ]( 'click', this );\n    // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n    if ( window.PointerEvent ) {\n      handle.style.touchAction = touchAction;\n    }\n  }\n};\n\n// prototype so it can be overwriteable by Flickity\nproto._touchActionValue = 'none';\n\n// ----- start event ----- //\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerDown = function( event, pointer ) {\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n  // track start event position\n  // Safari 9 overrides pageX and pageY. These values needs to be copied. flickity#842\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n\n  event.preventDefault();\n  this.pointerDownBlur();\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// nodes that have text fields\nvar cursorNodes = {\n  TEXTAREA: true,\n  INPUT: true,\n  SELECT: true,\n  OPTION: true,\n};\n\n// input types that do not have text fields\nvar clickTypes = {\n  radio: true,\n  checkbox: true,\n  button: true,\n  submit: true,\n  image: true,\n  file: true,\n};\n\n// dismiss inputs with text fields. flickity#403, flickity#404\nproto.okayPointerDown = function( event ) {\n  var isCursorNode = cursorNodes[ event.target.nodeName ];\n  var isClickType = clickTypes[ event.target.type ];\n  var isOkay = !isCursorNode || isClickType;\n  if ( !isOkay ) {\n    this._pointerReset();\n  }\n  return isOkay;\n};\n\n// kludge to blur previously focused input\nproto.pointerDownBlur = function() {\n  var focused = document.activeElement;\n  // do not blur body for IE10, metafizzy/flickity#117\n  var canBlur = focused && focused.blur && focused != document.body;\n  if ( canBlur ) {\n    focused.blur();\n  }\n};\n\n// ----- move event ----- //\n\n/**\n * drag move\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\n// base pointer move logic\nproto._dragPointerMove = function( event, pointer ) {\n  var moveVector = {\n    x: pointer.pageX - this.pointerDownPointer.pageX,\n    y: pointer.pageY - this.pointerDownPointer.pageY\n  };\n  // start drag if pointer has moved far enough to start drag\n  if ( !this.isDragging && this.hasDragStarted( moveVector ) ) {\n    this._dragStart( event, pointer );\n  }\n  return moveVector;\n};\n\n// condition if pointer has moved far enough to start drag\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n// ----- end event ----- //\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto._dragPointerUp = function( event, pointer ) {\n  if ( this.isDragging ) {\n    this._dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this._staticClick( event, pointer );\n  }\n};\n\n// -------------------------- drag -------------------------- //\n\n// dragStart\nproto._dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  // prevent clicks\n  this.isPreventingClicks = true;\n  this.dragStart( event, pointer );\n};\n\nproto.dragStart = function( event, pointer ) {\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\n// dragMove\nproto._dragMove = function( event, pointer, moveVector ) {\n  // do not drag if not dragging yet\n  if ( !this.isDragging ) {\n    return;\n  }\n\n  this.dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  event.preventDefault();\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// dragEnd\nproto._dragEnd = function( event, pointer ) {\n  // set flags\n  this.isDragging = false;\n  // re-enable clicking async\n  setTimeout( function() {\n    delete this.isPreventingClicks;\n  }.bind( this ) );\n\n  this.dragEnd( event, pointer );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\n// ----- onclick ----- //\n\n// handle all clicks and prevent clicks when dragging\nproto.onclick = function( event ) {\n  if ( this.isPreventingClicks ) {\n    event.preventDefault();\n  }\n};\n\n// ----- staticClick ----- //\n\n// triggered after pointer down & up with no/tiny movement\nproto._staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  this.staticClick( event, pointer );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 300ms\n    setTimeout( function() {\n      delete this.isIgnoringMouseUp;\n    }.bind( this ), 400 );\n  }\n};\n\nproto.staticClick = function( event, pointer ) {\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n};\n\n// ----- utils ----- //\n\nUnidragger.getPointerPoint = Unipointer.getPointerPoint;\n\n// -----  ----- //\n\nreturn Unidragger;\n\n}));\n"]},"metadata":{},"sourceType":"script"}