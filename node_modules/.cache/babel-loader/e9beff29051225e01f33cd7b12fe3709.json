{"ast":null,"code":"// Flickity main\n\n/* eslint-disable max-params */\n(function (window, factory) {\n  // universal module definition\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['ev-emitter/ev-emitter', 'get-size/get-size', 'fizzy-ui-utils/utils', './cell', './slide', './animate'], function (EvEmitter, getSize, utils, Cell, Slide, animatePrototype) {\n      return factory(window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('ev-emitter'), require('get-size'), require('fizzy-ui-utils'), require('./cell'), require('./slide'), require('./animate'));\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n    window.Flickity = factory(window, window.EvEmitter, window.getSize, window.fizzyUIUtils, _Flickity.Cell, _Flickity.Slide, _Flickity.animatePrototype);\n  }\n})(window, function factory(window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype) {\n  /* eslint-enable max-params */\n  'use strict'; // vars\n\n  var jQuery = window.jQuery;\n  var getComputedStyle = window.getComputedStyle;\n  var console = window.console;\n\n  function moveElements(elems, toElem) {\n    elems = utils.makeArray(elems);\n\n    while (elems.length) {\n      toElem.appendChild(elems.shift());\n    }\n  } // -------------------------- Flickity -------------------------- //\n  // globally unique identifiers\n\n\n  var GUID = 0; // internal store of all Flickity intances\n\n  var instances = {};\n\n  function Flickity(element, options) {\n    var queryElement = utils.getQueryElement(element);\n\n    if (!queryElement) {\n      if (console) {\n        console.error('Bad element for Flickity: ' + (queryElement || element));\n      }\n\n      return;\n    }\n\n    this.element = queryElement; // do not initialize twice on same element\n\n    if (this.element.flickityGUID) {\n      var instance = instances[this.element.flickityGUID];\n      if (instance) instance.option(options);\n      return instance;\n    } // add jQuery\n\n\n    if (jQuery) {\n      this.$element = jQuery(this.element);\n    } // options\n\n\n    this.options = utils.extend({}, this.constructor.defaults);\n    this.option(options); // kick things off\n\n    this._create();\n  }\n\n  Flickity.defaults = {\n    accessibility: true,\n    // adaptiveHeight: false,\n    cellAlign: 'center',\n    // cellSelector: undefined,\n    // contain: false,\n    freeScrollFriction: 0.075,\n    // friction when free-scrolling\n    friction: 0.28,\n    // friction when selecting\n    namespaceJQueryEvents: true,\n    // initialIndex: 0,\n    percentPosition: true,\n    resize: true,\n    selectedAttraction: 0.025,\n    setGallerySize: true // watchCSS: false,\n    // wrapAround: false\n\n  }; // hash of methods triggered on _create()\n\n  Flickity.createMethods = [];\n  var proto = Flickity.prototype; // inherit EventEmitter\n\n  utils.extend(proto, EvEmitter.prototype);\n\n  proto._create = function () {\n    // add id for Flickity.data\n    var id = this.guid = ++GUID;\n    this.element.flickityGUID = id; // expando\n\n    instances[id] = this; // associate via id\n    // initial properties\n\n    this.selectedIndex = 0; // how many frames slider has been in same position\n\n    this.restingFrames = 0; // initial physics properties\n\n    this.x = 0;\n    this.velocity = 0;\n    this.originSide = this.options.rightToLeft ? 'right' : 'left'; // create viewport & slider\n\n    this.viewport = document.createElement('div');\n    this.viewport.className = 'flickity-viewport';\n\n    this._createSlider();\n\n    if (this.options.resize || this.options.watchCSS) {\n      window.addEventListener('resize', this);\n    } // add listeners from on option\n\n\n    for (var eventName in this.options.on) {\n      var listener = this.options.on[eventName];\n      this.on(eventName, listener);\n    }\n\n    Flickity.createMethods.forEach(function (method) {\n      this[method]();\n    }, this);\n\n    if (this.options.watchCSS) {\n      this.watchCSS();\n    } else {\n      this.activate();\n    }\n  };\n  /**\n   * set options\n   * @param {Object} opts - options to extend\n   */\n\n\n  proto.option = function (opts) {\n    utils.extend(this.options, opts);\n  };\n\n  proto.activate = function () {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n    this.element.classList.add('flickity-enabled');\n\n    if (this.options.rightToLeft) {\n      this.element.classList.add('flickity-rtl');\n    }\n\n    this.getSize(); // move initial cell elements so they can be loaded as cells\n\n    var cellElems = this._filterFindCellElements(this.element.children);\n\n    moveElements(cellElems, this.slider);\n    this.viewport.appendChild(this.slider);\n    this.element.appendChild(this.viewport); // get cells from children\n\n    this.reloadCells();\n\n    if (this.options.accessibility) {\n      // allow element to focusable\n      this.element.tabIndex = 0; // listen for key presses\n\n      this.element.addEventListener('keydown', this);\n    }\n\n    this.emitEvent('activate');\n    this.selectInitialIndex(); // flag for initial activation, for using initialIndex\n\n    this.isInitActivated = true; // ready event. #493\n\n    this.dispatchEvent('ready');\n  }; // slider positions the cells\n\n\n  proto._createSlider = function () {\n    // slider element does all the positioning\n    var slider = document.createElement('div');\n    slider.className = 'flickity-slider';\n    slider.style[this.originSide] = 0;\n    this.slider = slider;\n  };\n\n  proto._filterFindCellElements = function (elems) {\n    return utils.filterFindElements(elems, this.options.cellSelector);\n  }; // goes through all children\n\n\n  proto.reloadCells = function () {\n    // collection of item elements\n    this.cells = this._makeCells(this.slider.children);\n    this.positionCells();\n\n    this._getWrapShiftCells();\n\n    this.setGallerySize();\n  };\n  /**\n   * turn elements into Flickity.Cells\n   * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells\n   * @returns {Array} items - collection of new Flickity Cells\n   */\n\n\n  proto._makeCells = function (elems) {\n    var cellElems = this._filterFindCellElements(elems); // create new Flickity for collection\n\n\n    var cells = cellElems.map(function (cellElem) {\n      return new Cell(cellElem, this);\n    }, this);\n    return cells;\n  };\n\n  proto.getLastCell = function () {\n    return this.cells[this.cells.length - 1];\n  };\n\n  proto.getLastSlide = function () {\n    return this.slides[this.slides.length - 1];\n  }; // positions all cells\n\n\n  proto.positionCells = function () {\n    // size all cells\n    this._sizeCells(this.cells); // position all cells\n\n\n    this._positionCells(0);\n  };\n  /**\n   * position certain cells\n   * @param {Integer} index - which cell to start with\n   */\n\n\n  proto._positionCells = function (index) {\n    index = index || 0; // also measure maxCellHeight\n    // start 0 if positioning all cells\n\n    this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n    var cellX = 0; // get cellX\n\n    if (index > 0) {\n      var startCell = this.cells[index - 1];\n      cellX = startCell.x + startCell.size.outerWidth;\n    }\n\n    var len = this.cells.length;\n\n    for (var i = index; i < len; i++) {\n      var cell = this.cells[i];\n      cell.setPosition(cellX);\n      cellX += cell.size.outerWidth;\n      this.maxCellHeight = Math.max(cell.size.outerHeight, this.maxCellHeight);\n    } // keep track of cellX for wrap-around\n\n\n    this.slideableWidth = cellX; // slides\n\n    this.updateSlides(); // contain slides target\n\n    this._containSlides(); // update slidesWidth\n\n\n    this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n  };\n  /**\n   * cell.getSize() on multiple cells\n   * @param {Array} cells - cells to size\n   */\n\n\n  proto._sizeCells = function (cells) {\n    cells.forEach(function (cell) {\n      cell.getSize();\n    });\n  }; // --------------------------  -------------------------- //\n\n\n  proto.updateSlides = function () {\n    this.slides = [];\n\n    if (!this.cells.length) {\n      return;\n    }\n\n    var slide = new Slide(this);\n    this.slides.push(slide);\n    var isOriginLeft = this.originSide == 'left';\n    var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n\n    var canCellFit = this._getCanCellFit();\n\n    this.cells.forEach(function (cell, i) {\n      // just add cell if first cell in slide\n      if (!slide.cells.length) {\n        slide.addCell(cell);\n        return;\n      }\n\n      var slideWidth = slide.outerWidth - slide.firstMargin + (cell.size.outerWidth - cell.size[nextMargin]);\n\n      if (canCellFit.call(this, i, slideWidth)) {\n        slide.addCell(cell);\n      } else {\n        // doesn't fit, new slide\n        slide.updateTarget();\n        slide = new Slide(this);\n        this.slides.push(slide);\n        slide.addCell(cell);\n      }\n    }, this); // last slide\n\n    slide.updateTarget(); // update .selectedSlide\n\n    this.updateSelectedSlide();\n  };\n\n  proto._getCanCellFit = function () {\n    var groupCells = this.options.groupCells;\n\n    if (!groupCells) {\n      return function () {\n        return false;\n      };\n    } else if (typeof groupCells == 'number') {\n      // group by number. 3 -> [0,1,2], [3,4,5], ...\n      var number = parseInt(groupCells, 10);\n      return function (i) {\n        return i % number !== 0;\n      };\n    } // default, group by width of slide\n    // parse '75%\n\n\n    var percentMatch = typeof groupCells == 'string' && groupCells.match(/^(\\d+)%$/);\n    var percent = percentMatch ? parseInt(percentMatch[1], 10) / 100 : 1;\n    return function (i, slideWidth) {\n      /* eslint-disable-next-line no-invalid-this */\n      return slideWidth <= (this.size.innerWidth + 1) * percent;\n    };\n  }; // alias _init for jQuery plugin .flickity()\n\n\n  proto._init = proto.reposition = function () {\n    this.positionCells();\n    this.positionSliderAtSelected();\n  };\n\n  proto.getSize = function () {\n    this.size = getSize(this.element);\n    this.setCellAlign();\n    this.cursorPosition = this.size.innerWidth * this.cellAlign;\n  };\n\n  var cellAlignShorthands = {\n    // cell align, then based on origin side\n    center: {\n      left: 0.5,\n      right: 0.5\n    },\n    left: {\n      left: 0,\n      right: 1\n    },\n    right: {\n      right: 0,\n      left: 1\n    }\n  };\n\n  proto.setCellAlign = function () {\n    var shorthand = cellAlignShorthands[this.options.cellAlign];\n    this.cellAlign = shorthand ? shorthand[this.originSide] : this.options.cellAlign;\n  };\n\n  proto.setGallerySize = function () {\n    if (this.options.setGallerySize) {\n      var height = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight;\n      this.viewport.style.height = height + 'px';\n    }\n  };\n\n  proto._getWrapShiftCells = function () {\n    // only for wrap-around\n    if (!this.options.wrapAround) {\n      return;\n    } // unshift previous cells\n\n\n    this._unshiftCells(this.beforeShiftCells);\n\n    this._unshiftCells(this.afterShiftCells); // get before cells\n    // initial gap\n\n\n    var gapX = this.cursorPosition;\n    var cellIndex = this.cells.length - 1;\n    this.beforeShiftCells = this._getGapCells(gapX, cellIndex, -1); // get after cells\n    // ending gap between last cell and end of gallery viewport\n\n    gapX = this.size.innerWidth - this.cursorPosition; // start cloning at first cell, working forwards\n\n    this.afterShiftCells = this._getGapCells(gapX, 0, 1);\n  };\n\n  proto._getGapCells = function (gapX, cellIndex, increment) {\n    // keep adding cells until the cover the initial gap\n    var cells = [];\n\n    while (gapX > 0) {\n      var cell = this.cells[cellIndex];\n\n      if (!cell) {\n        break;\n      }\n\n      cells.push(cell);\n      cellIndex += increment;\n      gapX -= cell.size.outerWidth;\n    }\n\n    return cells;\n  }; // ----- contain ----- //\n  // contain cell targets so no excess sliding\n\n\n  proto._containSlides = function () {\n    if (!this.options.contain || this.options.wrapAround || !this.cells.length) {\n      return;\n    }\n\n    var isRightToLeft = this.options.rightToLeft;\n    var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n    var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n    var contentWidth = this.slideableWidth - this.getLastCell().size[endMargin]; // content is less than gallery size\n\n    var isContentSmaller = contentWidth < this.size.innerWidth; // bounds\n\n    var beginBound = this.cursorPosition + this.cells[0].size[beginMargin];\n    var endBound = contentWidth - this.size.innerWidth * (1 - this.cellAlign); // contain each cell target\n\n    this.slides.forEach(function (slide) {\n      if (isContentSmaller) {\n        // all cells fit inside gallery\n        slide.target = contentWidth * this.cellAlign;\n      } else {\n        // contain to bounds\n        slide.target = Math.max(slide.target, beginBound);\n        slide.target = Math.min(slide.target, endBound);\n      }\n    }, this);\n  }; // -----  ----- //\n\n  /**\n   * emits events via eventEmitter and jQuery events\n   * @param {String} type - name of event\n   * @param {Event} event - original event\n   * @param {Array} args - extra arguments\n   */\n\n\n  proto.dispatchEvent = function (type, event, args) {\n    var emitArgs = event ? [event].concat(args) : args;\n    this.emitEvent(type, emitArgs);\n\n    if (jQuery && this.$element) {\n      // default trigger with type if no event\n      type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n      var $event = type;\n\n      if (event) {\n        // create jQuery event\n        var jQEvent = new jQuery.Event(event);\n        jQEvent.type = type;\n        $event = jQEvent;\n      }\n\n      this.$element.trigger($event, args);\n    }\n  }; // -------------------------- select -------------------------- //\n\n  /**\n   * @param {Integer} index - index of the slide\n   * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n   * @param {Boolean} isInstant - will immediately set position at selected cell\n   */\n\n\n  proto.select = function (index, isWrap, isInstant) {\n    if (!this.isActive) {\n      return;\n    }\n\n    index = parseInt(index, 10);\n\n    this._wrapSelect(index);\n\n    if (this.options.wrapAround || isWrap) {\n      index = utils.modulo(index, this.slides.length);\n    } // bail if invalid index\n\n\n    if (!this.slides[index]) {\n      return;\n    }\n\n    var prevIndex = this.selectedIndex;\n    this.selectedIndex = index;\n    this.updateSelectedSlide();\n\n    if (isInstant) {\n      this.positionSliderAtSelected();\n    } else {\n      this.startAnimation();\n    }\n\n    if (this.options.adaptiveHeight) {\n      this.setGallerySize();\n    } // events\n\n\n    this.dispatchEvent('select', null, [index]); // change event if new index\n\n    if (index != prevIndex) {\n      this.dispatchEvent('change', null, [index]);\n    } // old v1 event name, remove in v3\n\n\n    this.dispatchEvent('cellSelect');\n  }; // wraps position for wrapAround, to move to closest slide. #113\n\n\n  proto._wrapSelect = function (index) {\n    var len = this.slides.length;\n    var isWrapping = this.options.wrapAround && len > 1;\n\n    if (!isWrapping) {\n      return index;\n    }\n\n    var wrapIndex = utils.modulo(index, len); // go to shortest\n\n    var delta = Math.abs(wrapIndex - this.selectedIndex);\n    var backWrapDelta = Math.abs(wrapIndex + len - this.selectedIndex);\n    var forewardWrapDelta = Math.abs(wrapIndex - len - this.selectedIndex);\n\n    if (!this.isDragSelect && backWrapDelta < delta) {\n      index += len;\n    } else if (!this.isDragSelect && forewardWrapDelta < delta) {\n      index -= len;\n    } // wrap position so slider is within normal area\n\n\n    if (index < 0) {\n      this.x -= this.slideableWidth;\n    } else if (index >= len) {\n      this.x += this.slideableWidth;\n    }\n  };\n\n  proto.previous = function (isWrap, isInstant) {\n    this.select(this.selectedIndex - 1, isWrap, isInstant);\n  };\n\n  proto.next = function (isWrap, isInstant) {\n    this.select(this.selectedIndex + 1, isWrap, isInstant);\n  };\n\n  proto.updateSelectedSlide = function () {\n    var slide = this.slides[this.selectedIndex]; // selectedIndex could be outside of slides, if triggered before resize()\n\n    if (!slide) {\n      return;\n    } // unselect previous selected slide\n\n\n    this.unselectSelectedSlide(); // update new selected slide\n\n    this.selectedSlide = slide;\n    slide.select();\n    this.selectedCells = slide.cells;\n    this.selectedElements = slide.getCellElements(); // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n    // Remove in v3?\n\n    this.selectedCell = slide.cells[0];\n    this.selectedElement = this.selectedElements[0];\n  };\n\n  proto.unselectSelectedSlide = function () {\n    if (this.selectedSlide) {\n      this.selectedSlide.unselect();\n    }\n  };\n\n  proto.selectInitialIndex = function () {\n    var initialIndex = this.options.initialIndex; // already activated, select previous selectedIndex\n\n    if (this.isInitActivated) {\n      this.select(this.selectedIndex, false, true);\n      return;\n    } // select with selector string\n\n\n    if (initialIndex && typeof initialIndex == 'string') {\n      var cell = this.queryCell(initialIndex);\n\n      if (cell) {\n        this.selectCell(initialIndex, false, true);\n        return;\n      }\n    }\n\n    var index = 0; // select with number\n\n    if (initialIndex && this.slides[initialIndex]) {\n      index = initialIndex;\n    } // select instantly\n\n\n    this.select(index, false, true);\n  };\n  /**\n   * select slide from number or cell element\n   * @param {[Element, Number]} value - zero-based index or element to select\n   * @param {Boolean} isWrap - enables wrapping around for extra index\n   * @param {Boolean} isInstant - disables slide animation\n   */\n\n\n  proto.selectCell = function (value, isWrap, isInstant) {\n    // get cell\n    var cell = this.queryCell(value);\n\n    if (!cell) {\n      return;\n    }\n\n    var index = this.getCellSlideIndex(cell);\n    this.select(index, isWrap, isInstant);\n  };\n\n  proto.getCellSlideIndex = function (cell) {\n    // get index of slides that has cell\n    for (var i = 0; i < this.slides.length; i++) {\n      var slide = this.slides[i];\n      var index = slide.cells.indexOf(cell);\n\n      if (index != -1) {\n        return i;\n      }\n    }\n  }; // -------------------------- get cells -------------------------- //\n\n  /**\n   * get Flickity.Cell, given an Element\n   * @param {Element} elem - matching cell element\n   * @returns {Flickity.Cell} cell - matching cell\n   */\n\n\n  proto.getCell = function (elem) {\n    // loop through cells to get the one that matches\n    for (var i = 0; i < this.cells.length; i++) {\n      var cell = this.cells[i];\n\n      if (cell.element == elem) {\n        return cell;\n      }\n    }\n  };\n  /**\n   * get collection of Flickity.Cells, given Elements\n   * @param {[Element, Array, NodeList]} elems - multiple elements\n   * @returns {Array} cells - Flickity.Cells\n   */\n\n\n  proto.getCells = function (elems) {\n    elems = utils.makeArray(elems);\n    var cells = [];\n    elems.forEach(function (elem) {\n      var cell = this.getCell(elem);\n\n      if (cell) {\n        cells.push(cell);\n      }\n    }, this);\n    return cells;\n  };\n  /**\n   * get cell elements\n   * @returns {Array} cellElems\n   */\n\n\n  proto.getCellElements = function () {\n    return this.cells.map(function (cell) {\n      return cell.element;\n    });\n  };\n  /**\n   * get parent cell from an element\n   * @param {Element} elem - child element\n   * @returns {Flickit.Cell} cell - parent cell\n   */\n\n\n  proto.getParentCell = function (elem) {\n    // first check if elem is cell\n    var cell = this.getCell(elem);\n\n    if (cell) {\n      return cell;\n    } // try to get parent cell elem\n\n\n    elem = utils.getParent(elem, '.flickity-slider > *');\n    return this.getCell(elem);\n  };\n  /**\n   * get cells adjacent to a slide\n   * @param {Integer} adjCount - number of adjacent slides\n   * @param {Integer} index - index of slide to start\n   * @returns {Array} cells - array of Flickity.Cells\n   */\n\n\n  proto.getAdjacentCellElements = function (adjCount, index) {\n    if (!adjCount) {\n      return this.selectedSlide.getCellElements();\n    }\n\n    index = index === undefined ? this.selectedIndex : index;\n    var len = this.slides.length;\n\n    if (1 + adjCount * 2 >= len) {\n      return this.getCellElements();\n    }\n\n    var cellElems = [];\n\n    for (var i = index - adjCount; i <= index + adjCount; i++) {\n      var slideIndex = this.options.wrapAround ? utils.modulo(i, len) : i;\n      var slide = this.slides[slideIndex];\n\n      if (slide) {\n        cellElems = cellElems.concat(slide.getCellElements());\n      }\n    }\n\n    return cellElems;\n  };\n  /**\n   * select slide from number or cell element\n   * @param {[Element, String, Number]} selector - element, selector string, or index\n   * @returns {Flickity.Cell} - matching cell\n   */\n\n\n  proto.queryCell = function (selector) {\n    if (typeof selector == 'number') {\n      // use number as index\n      return this.cells[selector];\n    }\n\n    if (typeof selector == 'string') {\n      // do not select invalid selectors from hash: #123, #/. #791\n      if (selector.match(/^[#.]?[\\d/]/)) {\n        return;\n      } // use string as selector, get element\n\n\n      selector = this.element.querySelector(selector);\n    } // get cell from element\n\n\n    return this.getCell(selector);\n  }; // -------------------------- events -------------------------- //\n\n\n  proto.uiChange = function () {\n    this.emitEvent('uiChange');\n  }; // keep focus on element when child UI elements are clicked\n\n\n  proto.childUIPointerDown = function (event) {\n    // HACK iOS does not allow touch events to bubble up?!\n    if (event.type != 'touchstart') {\n      event.preventDefault();\n    }\n\n    this.focus();\n  }; // ----- resize ----- //\n\n\n  proto.onresize = function () {\n    this.watchCSS();\n    this.resize();\n  };\n\n  utils.debounceMethod(Flickity, 'onresize', 150);\n\n  proto.resize = function () {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.getSize(); // wrap values\n\n    if (this.options.wrapAround) {\n      this.x = utils.modulo(this.x, this.slideableWidth);\n    }\n\n    this.positionCells();\n\n    this._getWrapShiftCells();\n\n    this.setGallerySize();\n    this.emitEvent('resize'); // update selected index for group slides, instant\n    // TODO: position can be lost between groups of various numbers\n\n    var selectedElement = this.selectedElements && this.selectedElements[0];\n    this.selectCell(selectedElement, false, true);\n  }; // watches the :after property, activates/deactivates\n\n\n  proto.watchCSS = function () {\n    var watchOption = this.options.watchCSS;\n\n    if (!watchOption) {\n      return;\n    }\n\n    var afterContent = getComputedStyle(this.element, ':after').content; // activate if :after { content: 'flickity' }\n\n    if (afterContent.indexOf('flickity') != -1) {\n      this.activate();\n    } else {\n      this.deactivate();\n    }\n  }; // ----- keydown ----- //\n  // go previous/next if left/right keys pressed\n\n\n  proto.onkeydown = function (event) {\n    // only work if element is in focus\n    var isNotFocused = document.activeElement && document.activeElement != this.element;\n\n    if (!this.options.accessibility || isNotFocused) {\n      return;\n    }\n\n    var handler = Flickity.keyboardHandlers[event.keyCode];\n\n    if (handler) {\n      handler.call(this);\n    }\n  };\n\n  Flickity.keyboardHandlers = {\n    // left arrow\n    37: function _() {\n      var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n      this.uiChange();\n      this[leftMethod]();\n    },\n    // right arrow\n    39: function _() {\n      var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n      this.uiChange();\n      this[rightMethod]();\n    }\n  }; // ----- focus ----- //\n\n  proto.focus = function () {\n    // TODO remove scrollTo once focus options gets more support\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus ...\n    //    #Browser_compatibility\n    var prevScrollY = window.pageYOffset;\n    this.element.focus({\n      preventScroll: true\n    }); // hack to fix scroll jump after focus, #76\n\n    if (window.pageYOffset != prevScrollY) {\n      window.scrollTo(window.pageXOffset, prevScrollY);\n    }\n  }; // -------------------------- destroy -------------------------- //\n  // deactivate all Flickity functionality, but keep stuff available\n\n\n  proto.deactivate = function () {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.element.classList.remove('flickity-enabled');\n    this.element.classList.remove('flickity-rtl');\n    this.unselectSelectedSlide(); // destroy cells\n\n    this.cells.forEach(function (cell) {\n      cell.destroy();\n    });\n    this.element.removeChild(this.viewport); // move child elements back into element\n\n    moveElements(this.slider.children, this.element);\n\n    if (this.options.accessibility) {\n      this.element.removeAttribute('tabIndex');\n      this.element.removeEventListener('keydown', this);\n    } // set flags\n\n\n    this.isActive = false;\n    this.emitEvent('deactivate');\n  };\n\n  proto.destroy = function () {\n    this.deactivate();\n    window.removeEventListener('resize', this);\n    this.allOff();\n    this.emitEvent('destroy');\n\n    if (jQuery && this.$element) {\n      jQuery.removeData(this.element, 'flickity');\n    }\n\n    delete this.element.flickityGUID;\n    delete instances[this.guid];\n  }; // -------------------------- prototype -------------------------- //\n\n\n  utils.extend(proto, animatePrototype); // -------------------------- extras -------------------------- //\n\n  /**\n   * get Flickity instance from element\n   * @param {[Element, String]} elem - element or selector string\n   * @returns {Flickity} - Flickity instance\n   */\n\n  Flickity.data = function (elem) {\n    elem = utils.getQueryElement(elem);\n    var id = elem && elem.flickityGUID;\n    return id && instances[id];\n  };\n\n  utils.htmlInit(Flickity, 'flickity');\n\n  if (jQuery && jQuery.bridget) {\n    jQuery.bridget('flickity', Flickity);\n  } // set internal jQuery, for Webpack + jQuery v3, #478\n\n\n  Flickity.setJQuery = function (jq) {\n    jQuery = jq;\n  };\n\n  Flickity.Cell = Cell;\n  Flickity.Slide = Slide;\n  return Flickity;\n});","map":{"version":3,"sources":["C:/Users/LabJH/Documents/yamir/cit/minaposento/node_modules/flickity/js/flickity.js"],"names":["window","factory","define","amd","EvEmitter","getSize","utils","Cell","Slide","animatePrototype","module","exports","require","_Flickity","Flickity","fizzyUIUtils","jQuery","getComputedStyle","console","moveElements","elems","toElem","makeArray","length","appendChild","shift","GUID","instances","element","options","queryElement","getQueryElement","error","flickityGUID","instance","option","$element","extend","constructor","defaults","_create","accessibility","cellAlign","freeScrollFriction","friction","namespaceJQueryEvents","percentPosition","resize","selectedAttraction","setGallerySize","createMethods","proto","prototype","id","guid","selectedIndex","restingFrames","x","velocity","originSide","rightToLeft","viewport","document","createElement","className","_createSlider","watchCSS","addEventListener","eventName","on","listener","forEach","method","activate","opts","isActive","classList","add","cellElems","_filterFindCellElements","children","slider","reloadCells","tabIndex","emitEvent","selectInitialIndex","isInitActivated","dispatchEvent","style","filterFindElements","cellSelector","cells","_makeCells","positionCells","_getWrapShiftCells","map","cellElem","getLastCell","getLastSlide","slides","_sizeCells","_positionCells","index","maxCellHeight","cellX","startCell","size","outerWidth","len","i","cell","setPosition","Math","max","outerHeight","slideableWidth","updateSlides","_containSlides","slidesWidth","target","slide","push","isOriginLeft","nextMargin","canCellFit","_getCanCellFit","addCell","slideWidth","firstMargin","call","updateTarget","updateSelectedSlide","groupCells","number","parseInt","percentMatch","match","percent","innerWidth","_init","reposition","positionSliderAtSelected","setCellAlign","cursorPosition","cellAlignShorthands","center","left","right","shorthand","height","adaptiveHeight","selectedSlide","wrapAround","_unshiftCells","beforeShiftCells","afterShiftCells","gapX","cellIndex","_getGapCells","increment","contain","isRightToLeft","beginMargin","endMargin","contentWidth","isContentSmaller","beginBound","endBound","min","type","event","args","emitArgs","concat","$event","jQEvent","Event","trigger","select","isWrap","isInstant","_wrapSelect","modulo","prevIndex","startAnimation","isWrapping","wrapIndex","delta","abs","backWrapDelta","forewardWrapDelta","isDragSelect","previous","next","unselectSelectedSlide","selectedCells","selectedElements","getCellElements","selectedCell","selectedElement","unselect","initialIndex","queryCell","selectCell","value","getCellSlideIndex","indexOf","getCell","elem","getCells","getParentCell","getParent","getAdjacentCellElements","adjCount","undefined","slideIndex","selector","querySelector","uiChange","childUIPointerDown","preventDefault","focus","onresize","debounceMethod","watchOption","afterContent","content","deactivate","onkeydown","isNotFocused","activeElement","handler","keyboardHandlers","keyCode","leftMethod","rightMethod","prevScrollY","pageYOffset","preventScroll","scrollTo","pageXOffset","remove","destroy","removeChild","removeAttribute","removeEventListener","allOff","removeData","data","htmlInit","bridget","setJQuery","jq"],"mappings":"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","sourcesContent":["// Flickity main\n/* eslint-disable max-params */\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'get-size/get-size',\n      'fizzy-ui-utils/utils',\n      './cell',\n      './slide',\n      './animate',\n    ], function( EvEmitter, getSize, utils, Cell, Slide, animatePrototype ) {\n      return factory( window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('ev-emitter'),\n        require('get-size'),\n        require('fizzy-ui-utils'),\n        require('./cell'),\n        require('./slide'),\n        require('./animate')\n    );\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n\n    window.Flickity = factory(\n        window,\n        window.EvEmitter,\n        window.getSize,\n        window.fizzyUIUtils,\n        _Flickity.Cell,\n        _Flickity.Slide,\n        _Flickity.animatePrototype\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize,\n    utils, Cell, Slide, animatePrototype ) {\n\n/* eslint-enable max-params */\n'use strict';\n\n// vars\nvar jQuery = window.jQuery;\nvar getComputedStyle = window.getComputedStyle;\nvar console = window.console;\n\nfunction moveElements( elems, toElem ) {\n  elems = utils.makeArray( elems );\n  while ( elems.length ) {\n    toElem.appendChild( elems.shift() );\n  }\n}\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Flickity intances\nvar instances = {};\n\nfunction Flickity( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for Flickity: ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // do not initialize twice on same element\n  if ( this.element.flickityGUID ) {\n    var instance = instances[ this.element.flickityGUID ];\n    if ( instance ) instance.option( options );\n    return instance;\n  }\n\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  // adaptiveHeight: false,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  namespaceJQueryEvents: true,\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true,\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.createMethods = [];\n\nvar proto = Flickity.prototype;\n// inherit EventEmitter\nutils.extend( proto, EvEmitter.prototype );\n\nproto._create = function() {\n  // add id for Flickity.data\n  var id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.originSide = this.options.rightToLeft ? 'right' : 'left';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  this._createSlider();\n\n  if ( this.options.resize || this.options.watchCSS ) {\n    window.addEventListener( 'resize', this );\n  }\n\n  // add listeners from on option\n  for ( var eventName in this.options.on ) {\n    var listener = this.options.on[ eventName ];\n    this.on( eventName, listener );\n  }\n\n  Flickity.createMethods.forEach( function( method ) {\n    this[ method ]();\n  }, this );\n\n  if ( this.options.watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n\n};\n\n/**\n * set options\n * @param {Object} opts - options to extend\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\nproto.activate = function() {\n  if ( this.isActive ) {\n    return;\n  }\n  this.isActive = true;\n  this.element.classList.add('flickity-enabled');\n  if ( this.options.rightToLeft ) {\n    this.element.classList.add('flickity-rtl');\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  var cellElems = this._filterFindCellElements( this.element.children );\n  moveElements( cellElems, this.slider );\n  this.viewport.appendChild( this.slider );\n  this.element.appendChild( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    this.element.addEventListener( 'keydown', this );\n  }\n\n  this.emitEvent('activate');\n  this.selectInitialIndex();\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n  // ready event. #493\n  this.dispatchEvent('ready');\n};\n\n// slider positions the cells\nproto._createSlider = function() {\n  // slider element does all the positioning\n  var slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  slider.style[ this.originSide ] = 0;\n  this.slider = slider;\n};\n\nproto._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nproto.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells\n * @returns {Array} items - collection of new Flickity Cells\n */\nproto._makeCells = function( elems ) {\n  var cellElems = this._filterFindCellElements( elems );\n\n  // create new Flickity for collection\n  var cells = cellElems.map( function( cellElem ) {\n    return new Cell( cellElem, this );\n  }, this );\n\n  return cells;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.getLastSlide = function() {\n  return this.slides[ this.slides.length - 1 ];\n};\n\n// positions all cells\nproto.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nproto._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  var cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    var startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n  var len = this.cells.length;\n  for ( var i = index; i < len; i++ ) {\n    var cell = this.cells[i];\n    cell.setPosition( cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  }\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // slides\n  this.updateSlides();\n  // contain slides target\n  this._containSlides();\n  // update slidesWidth\n  this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells - cells to size\n */\nproto._sizeCells = function( cells ) {\n  cells.forEach( function( cell ) {\n    cell.getSize();\n  } );\n};\n\n// --------------------------  -------------------------- //\n\nproto.updateSlides = function() {\n  this.slides = [];\n  if ( !this.cells.length ) {\n    return;\n  }\n\n  var slide = new Slide( this );\n  this.slides.push( slide );\n  var isOriginLeft = this.originSide == 'left';\n  var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n\n  var canCellFit = this._getCanCellFit();\n\n  this.cells.forEach( function( cell, i ) {\n    // just add cell if first cell in slide\n    if ( !slide.cells.length ) {\n      slide.addCell( cell );\n      return;\n    }\n\n    var slideWidth = ( slide.outerWidth - slide.firstMargin ) +\n      ( cell.size.outerWidth - cell.size[ nextMargin ] );\n\n    if ( canCellFit.call( this, i, slideWidth ) ) {\n      slide.addCell( cell );\n    } else {\n      // doesn't fit, new slide\n      slide.updateTarget();\n\n      slide = new Slide( this );\n      this.slides.push( slide );\n      slide.addCell( cell );\n    }\n  }, this );\n  // last slide\n  slide.updateTarget();\n  // update .selectedSlide\n  this.updateSelectedSlide();\n};\n\nproto._getCanCellFit = function() {\n  var groupCells = this.options.groupCells;\n  if ( !groupCells ) {\n    return function() {\n      return false;\n    };\n  } else if ( typeof groupCells == 'number' ) {\n    // group by number. 3 -> [0,1,2], [3,4,5], ...\n    var number = parseInt( groupCells, 10 );\n    return function( i ) {\n      return ( i % number ) !== 0;\n    };\n  }\n  // default, group by width of slide\n  // parse '75%\n  var percentMatch = typeof groupCells == 'string' &&\n    groupCells.match( /^(\\d+)%$/ );\n  var percent = percentMatch ? parseInt( percentMatch[1], 10 ) / 100 : 1;\n  return function( i, slideWidth ) {\n    /* eslint-disable-next-line no-invalid-this */\n    return slideWidth <= ( this.size.innerWidth + 1 ) * percent;\n  };\n};\n\n// alias _init for jQuery plugin .flickity()\nproto._init =\nproto.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nvar cellAlignShorthands = {\n  // cell align, then based on origin side\n  center: {\n    left: 0.5,\n    right: 0.5,\n  },\n  left: {\n    left: 0,\n    right: 1,\n  },\n  right: {\n    right: 0,\n    left: 1,\n  },\n};\n\nproto.setCellAlign = function() {\n  var shorthand = cellAlignShorthands[ this.options.cellAlign ];\n  this.cellAlign = shorthand ? shorthand[ this.originSide ] : this.options.cellAlign;\n};\n\nproto.setGallerySize = function() {\n  if ( this.options.setGallerySize ) {\n    var height = this.options.adaptiveHeight && this.selectedSlide ?\n      this.selectedSlide.height : this.maxCellHeight;\n    this.viewport.style.height = height + 'px';\n  }\n};\n\nproto._getWrapShiftCells = function() {\n  // only for wrap-around\n  if ( !this.options.wrapAround ) {\n    return;\n  }\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  var gapX = this.cursorPosition;\n  var cellIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( gapX, cellIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  gapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( gapX, 0, 1 );\n};\n\nproto._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  var cells = [];\n  while ( gapX > 0 ) {\n    var cell = this.cells[ cellIndex ];\n    if ( !cell ) {\n      break;\n    }\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain ----- //\n\n// contain cell targets so no excess sliding\nproto._containSlides = function() {\n  if ( !this.options.contain || this.options.wrapAround || !this.cells.length ) {\n    return;\n  }\n  var isRightToLeft = this.options.rightToLeft;\n  var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n  var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n  var contentWidth = this.slideableWidth - this.getLastCell().size[ endMargin ];\n  // content is less than gallery size\n  var isContentSmaller = contentWidth < this.size.innerWidth;\n  // bounds\n  var beginBound = this.cursorPosition + this.cells[0].size[ beginMargin ];\n  var endBound = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n  // contain each cell target\n  this.slides.forEach( function( slide ) {\n    if ( isContentSmaller ) {\n      // all cells fit inside gallery\n      slide.target = contentWidth * this.cellAlign;\n    } else {\n      // contain to bounds\n      slide.target = Math.max( slide.target, beginBound );\n      slide.target = Math.min( slide.target, endBound );\n    }\n  }, this );\n};\n\n// -----  ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    // default trigger with type if no event\n    type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n    var $event = type;\n    if ( event ) {\n      // create jQuery event\n      var jQEvent = new jQuery.Event( event );\n      jQEvent.type = type;\n      $event = jQEvent;\n    }\n    this.$element.trigger( $event, args );\n  }\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the slide\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nproto.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) {\n    return;\n  }\n  index = parseInt( index, 10 );\n  this._wrapSelect( index );\n\n  if ( this.options.wrapAround || isWrap ) {\n    index = utils.modulo( index, this.slides.length );\n  }\n  // bail if invalid index\n  if ( !this.slides[ index ] ) {\n    return;\n  }\n  var prevIndex = this.selectedIndex;\n  this.selectedIndex = index;\n  this.updateSelectedSlide();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  if ( this.options.adaptiveHeight ) {\n    this.setGallerySize();\n  }\n  // events\n  this.dispatchEvent( 'select', null, [ index ] );\n  // change event if new index\n  if ( index != prevIndex ) {\n    this.dispatchEvent( 'change', null, [ index ] );\n  }\n  // old v1 event name, remove in v3\n  this.dispatchEvent('cellSelect');\n};\n\n// wraps position for wrapAround, to move to closest slide. #113\nproto._wrapSelect = function( index ) {\n  var len = this.slides.length;\n  var isWrapping = this.options.wrapAround && len > 1;\n  if ( !isWrapping ) {\n    return index;\n  }\n  var wrapIndex = utils.modulo( index, len );\n  // go to shortest\n  var delta = Math.abs( wrapIndex - this.selectedIndex );\n  var backWrapDelta = Math.abs( ( wrapIndex + len ) - this.selectedIndex );\n  var forewardWrapDelta = Math.abs( ( wrapIndex - len ) - this.selectedIndex );\n  if ( !this.isDragSelect && backWrapDelta < delta ) {\n    index += len;\n  } else if ( !this.isDragSelect && forewardWrapDelta < delta ) {\n    index -= len;\n  }\n  // wrap position so slider is within normal area\n  if ( index < 0 ) {\n    this.x -= this.slideableWidth;\n  } else if ( index >= len ) {\n    this.x += this.slideableWidth;\n  }\n};\n\nproto.previous = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex - 1, isWrap, isInstant );\n};\n\nproto.next = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex + 1, isWrap, isInstant );\n};\n\nproto.updateSelectedSlide = function() {\n  var slide = this.slides[ this.selectedIndex ];\n  // selectedIndex could be outside of slides, if triggered before resize()\n  if ( !slide ) {\n    return;\n  }\n  // unselect previous selected slide\n  this.unselectSelectedSlide();\n  // update new selected slide\n  this.selectedSlide = slide;\n  slide.select();\n  this.selectedCells = slide.cells;\n  this.selectedElements = slide.getCellElements();\n  // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n  // Remove in v3?\n  this.selectedCell = slide.cells[0];\n  this.selectedElement = this.selectedElements[0];\n};\n\nproto.unselectSelectedSlide = function() {\n  if ( this.selectedSlide ) {\n    this.selectedSlide.unselect();\n  }\n};\n\nproto.selectInitialIndex = function() {\n  var initialIndex = this.options.initialIndex;\n  // already activated, select previous selectedIndex\n  if ( this.isInitActivated ) {\n    this.select( this.selectedIndex, false, true );\n    return;\n  }\n  // select with selector string\n  if ( initialIndex && typeof initialIndex == 'string' ) {\n    var cell = this.queryCell( initialIndex );\n    if ( cell ) {\n      this.selectCell( initialIndex, false, true );\n      return;\n    }\n  }\n\n  var index = 0;\n  // select with number\n  if ( initialIndex && this.slides[ initialIndex ] ) {\n    index = initialIndex;\n  }\n  // select instantly\n  this.select( index, false, true );\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, Number]} value - zero-based index or element to select\n * @param {Boolean} isWrap - enables wrapping around for extra index\n * @param {Boolean} isInstant - disables slide animation\n */\nproto.selectCell = function( value, isWrap, isInstant ) {\n  // get cell\n  var cell = this.queryCell( value );\n  if ( !cell ) {\n    return;\n  }\n\n  var index = this.getCellSlideIndex( cell );\n  this.select( index, isWrap, isInstant );\n};\n\nproto.getCellSlideIndex = function( cell ) {\n  // get index of slides that has cell\n  for ( var i = 0; i < this.slides.length; i++ ) {\n    var slide = this.slides[i];\n    var index = slide.cells.indexOf( cell );\n    if ( index != -1 ) {\n      return i;\n    }\n  }\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem - matching cell element\n * @returns {Flickity.Cell} cell - matching cell\n */\nproto.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( var i = 0; i < this.cells.length; i++ ) {\n    var cell = this.cells[i];\n    if ( cell.element == elem ) {\n      return cell;\n    }\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {[Element, Array, NodeList]} elems - multiple elements\n * @returns {Array} cells - Flickity.Cells\n */\nproto.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  var cells = [];\n  elems.forEach( function( elem ) {\n    var cell = this.getCell( elem );\n    if ( cell ) {\n      cells.push( cell );\n    }\n  }, this );\n  return cells;\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  } );\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem - child element\n * @returns {Flickit.Cell} cell - parent cell\n */\nproto.getParentCell = function( elem ) {\n  // first check if elem is cell\n  var cell = this.getCell( elem );\n  if ( cell ) {\n    return cell;\n  }\n  // try to get parent cell elem\n  elem = utils.getParent( elem, '.flickity-slider > *' );\n  return this.getCell( elem );\n};\n\n/**\n * get cells adjacent to a slide\n * @param {Integer} adjCount - number of adjacent slides\n * @param {Integer} index - index of slide to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nproto.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) {\n    return this.selectedSlide.getCellElements();\n  }\n  index = index === undefined ? this.selectedIndex : index;\n\n  var len = this.slides.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements();\n  }\n\n  var cellElems = [];\n  for ( var i = index - adjCount; i <= index + adjCount; i++ ) {\n    var slideIndex = this.options.wrapAround ? utils.modulo( i, len ) : i;\n    var slide = this.slides[ slideIndex ];\n    if ( slide ) {\n      cellElems = cellElems.concat( slide.getCellElements() );\n    }\n  }\n  return cellElems;\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, String, Number]} selector - element, selector string, or index\n * @returns {Flickity.Cell} - matching cell\n */\nproto.queryCell = function( selector ) {\n  if ( typeof selector == 'number' ) {\n    // use number as index\n    return this.cells[ selector ];\n  }\n  if ( typeof selector == 'string' ) {\n    // do not select invalid selectors from hash: #123, #/. #791\n    if ( selector.match( /^[#.]?[\\d/]/ ) ) {\n      return;\n    }\n    // use string as selector, get element\n    selector = this.element.querySelector( selector );\n  }\n  // get cell from element\n  return this.getCell( selector );\n};\n\n// -------------------------- events -------------------------- //\n\nproto.uiChange = function() {\n  this.emitEvent('uiChange');\n};\n\n// keep focus on element when child UI elements are clicked\nproto.childUIPointerDown = function( event ) {\n  // HACK iOS does not allow touch events to bubble up?!\n  if ( event.type != 'touchstart' ) {\n    event.preventDefault();\n  }\n  this.focus();\n};\n\n// ----- resize ----- //\n\nproto.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nproto.resize = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.getSize();\n  // wrap values\n  if ( this.options.wrapAround ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  this.emitEvent('resize');\n  // update selected index for group slides, instant\n  // TODO: position can be lost between groups of various numbers\n  var selectedElement = this.selectedElements && this.selectedElements[0];\n  this.selectCell( selectedElement, false, true );\n};\n\n// watches the :after property, activates/deactivates\nproto.watchCSS = function() {\n  var watchOption = this.options.watchCSS;\n  if ( !watchOption ) {\n    return;\n  }\n\n  var afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.indexOf('flickity') != -1 ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nproto.onkeydown = function( event ) {\n  // only work if element is in focus\n  var isNotFocused = document.activeElement && document.activeElement != this.element;\n  if ( !this.options.accessibility || isNotFocused ) {\n    return;\n  }\n\n  var handler = Flickity.keyboardHandlers[ event.keyCode ];\n  if ( handler ) {\n    handler.call( this );\n  }\n};\n\nFlickity.keyboardHandlers = {\n  // left arrow\n  37: function() {\n    var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this.uiChange();\n    this[ leftMethod ]();\n  },\n  // right arrow\n  39: function() {\n    var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this.uiChange();\n    this[ rightMethod ]();\n  },\n};\n\n// ----- focus ----- //\n\nproto.focus = function() {\n  // TODO remove scrollTo once focus options gets more support\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus ...\n  //    #Browser_compatibility\n  var prevScrollY = window.pageYOffset;\n  this.element.focus({ preventScroll: true });\n  // hack to fix scroll jump after focus, #76\n  if ( window.pageYOffset != prevScrollY ) {\n    window.scrollTo( window.pageXOffset, prevScrollY );\n  }\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nproto.deactivate = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.element.classList.remove('flickity-enabled');\n  this.element.classList.remove('flickity-rtl');\n  this.unselectSelectedSlide();\n  // destroy cells\n  this.cells.forEach( function( cell ) {\n    cell.destroy();\n  } );\n  this.element.removeChild( this.viewport );\n  // move child elements back into element\n  moveElements( this.slider.children, this.element );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    this.element.removeEventListener( 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emitEvent('deactivate');\n};\n\nproto.destroy = function() {\n  this.deactivate();\n  window.removeEventListener( 'resize', this );\n  this.allOff();\n  this.emitEvent('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nutils.extend( proto, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n/**\n * get Flickity instance from element\n * @param {[Element, String]} elem - element or selector string\n * @returns {Flickity} - Flickity instance\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.flickityGUID;\n  return id && instances[ id ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nif ( jQuery && jQuery.bridget ) {\n  jQuery.bridget( 'flickity', Flickity );\n}\n\n// set internal jQuery, for Webpack + jQuery v3, #478\nFlickity.setJQuery = function( jq ) {\n  jQuery = jq;\n};\n\nFlickity.Cell = Cell;\nFlickity.Slide = Slide;\n\nreturn Flickity;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}