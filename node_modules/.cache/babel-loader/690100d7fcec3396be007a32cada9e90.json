{"ast":null,"code":"// player & autoPlay\n(function (window, factory) {\n  // universal module definition\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['ev-emitter/ev-emitter', 'fizzy-ui-utils/utils', './flickity'], function (EvEmitter, utils, Flickity) {\n      return factory(EvEmitter, utils, Flickity);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('ev-emitter'), require('fizzy-ui-utils'), require('./flickity'));\n  } else {\n    // browser global\n    factory(window.EvEmitter, window.fizzyUIUtils, window.Flickity);\n  }\n})(window, function factory(EvEmitter, utils, Flickity) {\n  'use strict'; // -------------------------- Player -------------------------- //\n\n  function Player(parent) {\n    this.parent = parent;\n    this.state = 'stopped'; // visibility change event handler\n\n    this.onVisibilityChange = this.visibilityChange.bind(this);\n    this.onVisibilityPlay = this.visibilityPlay.bind(this);\n  }\n\n  Player.prototype = Object.create(EvEmitter.prototype); // start play\n\n  Player.prototype.play = function () {\n    if (this.state == 'playing') {\n      return;\n    } // do not play if page is hidden, start playing when page is visible\n\n\n    var isPageHidden = document.hidden;\n\n    if (isPageHidden) {\n      document.addEventListener('visibilitychange', this.onVisibilityPlay);\n      return;\n    }\n\n    this.state = 'playing'; // listen to visibility change\n\n    document.addEventListener('visibilitychange', this.onVisibilityChange); // start ticking\n\n    this.tick();\n  };\n\n  Player.prototype.tick = function () {\n    // do not tick if not playing\n    if (this.state != 'playing') {\n      return;\n    }\n\n    var time = this.parent.options.autoPlay; // default to 3 seconds\n\n    time = typeof time == 'number' ? time : 3000;\n\n    var _this = this; // HACK: reset ticks if stopped and started within interval\n\n\n    this.clear();\n    this.timeout = setTimeout(function () {\n      _this.parent.next(true);\n\n      _this.tick();\n    }, time);\n  };\n\n  Player.prototype.stop = function () {\n    this.state = 'stopped';\n    this.clear(); // remove visibility change event\n\n    document.removeEventListener('visibilitychange', this.onVisibilityChange);\n  };\n\n  Player.prototype.clear = function () {\n    clearTimeout(this.timeout);\n  };\n\n  Player.prototype.pause = function () {\n    if (this.state == 'playing') {\n      this.state = 'paused';\n      this.clear();\n    }\n  };\n\n  Player.prototype.unpause = function () {\n    // re-start play if paused\n    if (this.state == 'paused') {\n      this.play();\n    }\n  }; // pause if page visibility is hidden, unpause if visible\n\n\n  Player.prototype.visibilityChange = function () {\n    var isPageHidden = document.hidden;\n    this[isPageHidden ? 'pause' : 'unpause']();\n  };\n\n  Player.prototype.visibilityPlay = function () {\n    this.play();\n    document.removeEventListener('visibilitychange', this.onVisibilityPlay);\n  }; // -------------------------- Flickity -------------------------- //\n\n\n  utils.extend(Flickity.defaults, {\n    pauseAutoPlayOnHover: true\n  });\n  Flickity.createMethods.push('_createPlayer');\n  var proto = Flickity.prototype;\n\n  proto._createPlayer = function () {\n    this.player = new Player(this);\n    this.on('activate', this.activatePlayer);\n    this.on('uiChange', this.stopPlayer);\n    this.on('pointerDown', this.stopPlayer);\n    this.on('deactivate', this.deactivatePlayer);\n  };\n\n  proto.activatePlayer = function () {\n    if (!this.options.autoPlay) {\n      return;\n    }\n\n    this.player.play();\n    this.element.addEventListener('mouseenter', this);\n  }; // Player API, don't hate the ... thanks I know where the door is\n\n\n  proto.playPlayer = function () {\n    this.player.play();\n  };\n\n  proto.stopPlayer = function () {\n    this.player.stop();\n  };\n\n  proto.pausePlayer = function () {\n    this.player.pause();\n  };\n\n  proto.unpausePlayer = function () {\n    this.player.unpause();\n  };\n\n  proto.deactivatePlayer = function () {\n    this.player.stop();\n    this.element.removeEventListener('mouseenter', this);\n  }; // ----- mouseenter/leave ----- //\n  // pause auto-play on hover\n\n\n  proto.onmouseenter = function () {\n    if (!this.options.pauseAutoPlayOnHover) {\n      return;\n    }\n\n    this.player.pause();\n    this.element.addEventListener('mouseleave', this);\n  }; // resume auto-play on hover off\n\n\n  proto.onmouseleave = function () {\n    this.player.unpause();\n    this.element.removeEventListener('mouseleave', this);\n  }; // -----  ----- //\n\n\n  Flickity.Player = Player;\n  return Flickity;\n});","map":{"version":3,"sources":["C:/Users/LabJH/Documents/yamir/cit/minaposento/node_modules/flickity/js/player.js"],"names":["window","factory","define","amd","EvEmitter","utils","Flickity","module","exports","require","fizzyUIUtils","Player","parent","state","onVisibilityChange","visibilityChange","bind","onVisibilityPlay","visibilityPlay","prototype","Object","create","play","isPageHidden","document","hidden","addEventListener","tick","time","options","autoPlay","_this","clear","timeout","setTimeout","next","stop","removeEventListener","clearTimeout","pause","unpause","extend","defaults","pauseAutoPlayOnHover","createMethods","push","proto","_createPlayer","player","on","activatePlayer","stopPlayer","deactivatePlayer","element","playPlayer","pausePlayer","unpausePlayer","onmouseenter","onmouseleave"],"mappings":"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","sourcesContent":["// player & autoPlay\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'fizzy-ui-utils/utils',\n      './flickity',\n    ], function( EvEmitter, utils, Flickity ) {\n      return factory( EvEmitter, utils, Flickity );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('ev-emitter'),\n        require('fizzy-ui-utils'),\n        require('./flickity')\n    );\n  } else {\n    // browser global\n    factory(\n        window.EvEmitter,\n        window.fizzyUIUtils,\n        window.Flickity\n    );\n  }\n\n}( window, function factory( EvEmitter, utils, Flickity ) {\n\n'use strict';\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( parent ) {\n  this.parent = parent;\n  this.state = 'stopped';\n  // visibility change event handler\n  this.onVisibilityChange = this.visibilityChange.bind( this );\n  this.onVisibilityPlay = this.visibilityPlay.bind( this );\n}\n\nPlayer.prototype = Object.create( EvEmitter.prototype );\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state == 'playing' ) {\n    return;\n  }\n  // do not play if page is hidden, start playing when page is visible\n  var isPageHidden = document.hidden;\n  if ( isPageHidden ) {\n    document.addEventListener( 'visibilitychange', this.onVisibilityPlay );\n    return;\n  }\n\n  this.state = 'playing';\n  // listen to visibility change\n  document.addEventListener( 'visibilitychange', this.onVisibilityChange );\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state != 'playing' ) {\n    return;\n  }\n\n  var time = this.parent.options.autoPlay;\n  // default to 3 seconds\n  time = typeof time == 'number' ? time : 3000;\n  var _this = this;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( function() {\n    _this.parent.next( true );\n    _this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  document.removeEventListener( 'visibilitychange', this.onVisibilityChange );\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state == 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if paused\n  if ( this.state == 'paused' ) {\n    this.play();\n  }\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  var isPageHidden = document.hidden;\n  this[ isPageHidden ? 'pause' : 'unpause' ]();\n};\n\nPlayer.prototype.visibilityPlay = function() {\n  this.play();\n  document.removeEventListener( 'visibilitychange', this.onVisibilityPlay );\n};\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pauseAutoPlayOnHover: true,\n} );\n\nFlickity.createMethods.push('_createPlayer');\nvar proto = Flickity.prototype;\n\nproto._createPlayer = function() {\n  this.player = new Player( this );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nproto.activatePlayer = function() {\n  if ( !this.options.autoPlay ) {\n    return;\n  }\n  this.player.play();\n  this.element.addEventListener( 'mouseenter', this );\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nproto.playPlayer = function() {\n  this.player.play();\n};\n\nproto.stopPlayer = function() {\n  this.player.stop();\n};\n\nproto.pausePlayer = function() {\n  this.player.pause();\n};\n\nproto.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nproto.deactivatePlayer = function() {\n  this.player.stop();\n  this.element.removeEventListener( 'mouseenter', this );\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nproto.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) {\n    return;\n  }\n  this.player.pause();\n  this.element.addEventListener( 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nproto.onmouseleave = function() {\n  this.player.unpause();\n  this.element.removeEventListener( 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}