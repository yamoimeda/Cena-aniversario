{"ast":null,"code":"// animate\n(function (window, factory) {\n  // universal module definition\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['fizzy-ui-utils/utils'], function (utils) {\n      return factory(window, utils);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('fizzy-ui-utils'));\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory(window, window.fizzyUIUtils);\n  }\n})(window, function factory(window, utils) {\n  'use strict'; // -------------------------- animate -------------------------- //\n\n  var proto = {};\n\n  proto.startAnimation = function () {\n    if (this.isAnimating) {\n      return;\n    }\n\n    this.isAnimating = true;\n    this.restingFrames = 0;\n    this.animate();\n  };\n\n  proto.animate = function () {\n    this.applyDragForce();\n    this.applySelectedAttraction();\n    var previousX = this.x;\n    this.integratePhysics();\n    this.positionSlider();\n    this.settle(previousX); // animate next frame\n\n    if (this.isAnimating) {\n      var _this = this;\n\n      requestAnimationFrame(function animateFrame() {\n        _this.animate();\n      });\n    }\n  };\n\n  proto.positionSlider = function () {\n    var x = this.x; // wrap position around\n\n    if (this.options.wrapAround && this.cells.length > 1) {\n      x = utils.modulo(x, this.slideableWidth);\n      x -= this.slideableWidth;\n      this.shiftWrapCells(x);\n    }\n\n    this.setTranslateX(x, this.isAnimating);\n    this.dispatchScrollEvent();\n  };\n\n  proto.setTranslateX = function (x, is3d) {\n    x += this.cursorPosition; // reverse if right-to-left and using transform\n\n    x = this.options.rightToLeft ? -x : x;\n    var translateX = this.getPositionValue(x); // use 3D transforms for hardware acceleration on iOS\n    // but use 2D when settled, for better font-rendering\n\n    this.slider.style.transform = is3d ? 'translate3d(' + translateX + ',0,0)' : 'translateX(' + translateX + ')';\n  };\n\n  proto.dispatchScrollEvent = function () {\n    var firstSlide = this.slides[0];\n\n    if (!firstSlide) {\n      return;\n    }\n\n    var positionX = -this.x - firstSlide.target;\n    var progress = positionX / this.slidesWidth;\n    this.dispatchEvent('scroll', null, [progress, positionX]);\n  };\n\n  proto.positionSliderAtSelected = function () {\n    if (!this.cells.length) {\n      return;\n    }\n\n    this.x = -this.selectedSlide.target;\n    this.velocity = 0; // stop wobble\n\n    this.positionSlider();\n  };\n\n  proto.getPositionValue = function (position) {\n    if (this.options.percentPosition) {\n      // percent position, round to 2 digits, like 12.34%\n      return Math.round(position / this.size.innerWidth * 10000) * 0.01 + '%';\n    } else {\n      // pixel positioning\n      return Math.round(position) + 'px';\n    }\n  };\n\n  proto.settle = function (previousX) {\n    // keep track of frames where x hasn't moved\n    var isResting = !this.isPointerDown && Math.round(this.x * 100) == Math.round(previousX * 100);\n\n    if (isResting) {\n      this.restingFrames++;\n    } // stop animating if resting for 3 or more frames\n\n\n    if (this.restingFrames > 2) {\n      this.isAnimating = false;\n      delete this.isFreeScrolling; // render position with translateX when settled\n\n      this.positionSlider();\n      this.dispatchEvent('settle', null, [this.selectedIndex]);\n    }\n  };\n\n  proto.shiftWrapCells = function (x) {\n    // shift before cells\n    var beforeGap = this.cursorPosition + x;\n\n    this._shiftCells(this.beforeShiftCells, beforeGap, -1); // shift after cells\n\n\n    var afterGap = this.size.innerWidth - (x + this.slideableWidth + this.cursorPosition);\n\n    this._shiftCells(this.afterShiftCells, afterGap, 1);\n  };\n\n  proto._shiftCells = function (cells, gap, shift) {\n    for (var i = 0; i < cells.length; i++) {\n      var cell = cells[i];\n      var cellShift = gap > 0 ? shift : 0;\n      cell.wrapShift(cellShift);\n      gap -= cell.size.outerWidth;\n    }\n  };\n\n  proto._unshiftCells = function (cells) {\n    if (!cells || !cells.length) {\n      return;\n    }\n\n    for (var i = 0; i < cells.length; i++) {\n      cells[i].wrapShift(0);\n    }\n  }; // -------------------------- physics -------------------------- //\n\n\n  proto.integratePhysics = function () {\n    this.x += this.velocity;\n    this.velocity *= this.getFrictionFactor();\n  };\n\n  proto.applyForce = function (force) {\n    this.velocity += force;\n  };\n\n  proto.getFrictionFactor = function () {\n    return 1 - this.options[this.isFreeScrolling ? 'freeScrollFriction' : 'friction'];\n  };\n\n  proto.getRestingPosition = function () {\n    // my thanks to Steven Wittens, who simplified this math greatly\n    return this.x + this.velocity / (1 - this.getFrictionFactor());\n  };\n\n  proto.applyDragForce = function () {\n    if (!this.isDraggable || !this.isPointerDown) {\n      return;\n    } // change the position to drag position by applying force\n\n\n    var dragVelocity = this.dragX - this.x;\n    var dragForce = dragVelocity - this.velocity;\n    this.applyForce(dragForce);\n  };\n\n  proto.applySelectedAttraction = function () {\n    // do not attract if pointer down or no slides\n    var dragDown = this.isDraggable && this.isPointerDown;\n\n    if (dragDown || this.isFreeScrolling || !this.slides.length) {\n      return;\n    }\n\n    var distance = this.selectedSlide.target * -1 - this.x;\n    var force = distance * this.options.selectedAttraction;\n    this.applyForce(force);\n  };\n\n  return proto;\n});","map":{"version":3,"sources":["C:/Users/LabJH/Documents/yamir/cit/minaposento/node_modules/flickity/js/animate.js"],"names":["window","factory","define","amd","utils","module","exports","require","Flickity","animatePrototype","fizzyUIUtils","proto","startAnimation","isAnimating","restingFrames","animate","applyDragForce","applySelectedAttraction","previousX","x","integratePhysics","positionSlider","settle","_this","requestAnimationFrame","animateFrame","options","wrapAround","cells","length","modulo","slideableWidth","shiftWrapCells","setTranslateX","dispatchScrollEvent","is3d","cursorPosition","rightToLeft","translateX","getPositionValue","slider","style","transform","firstSlide","slides","positionX","target","progress","slidesWidth","dispatchEvent","positionSliderAtSelected","selectedSlide","velocity","position","percentPosition","Math","round","size","innerWidth","isResting","isPointerDown","isFreeScrolling","selectedIndex","beforeGap","_shiftCells","beforeShiftCells","afterGap","afterShiftCells","gap","shift","i","cell","cellShift","wrapShift","outerWidth","_unshiftCells","getFrictionFactor","applyForce","force","getRestingPosition","isDraggable","dragVelocity","dragX","dragForce","dragDown","distance","selectedAttraction"],"mappings":"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","sourcesContent":["// animate\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'fizzy-ui-utils/utils',\n    ], function( utils ) {\n      return factory( window, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory(\n        window,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, utils ) {\n\n'use strict';\n\n// -------------------------- animate -------------------------- //\n\nvar proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) {\n    return;\n  }\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  var previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) {\n    var _this = this;\n    requestAnimationFrame( function animateFrame() {\n      _this.animate();\n    } );\n  }\n};\n\nproto.positionSlider = function() {\n  var x = this.x;\n  // wrap position around\n  if ( this.options.wrapAround && this.cells.length > 1 ) {\n    x = utils.modulo( x, this.slideableWidth );\n    x -= this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  this.setTranslateX( x, this.isAnimating );\n  this.dispatchScrollEvent();\n};\n\nproto.setTranslateX = function( x, is3d ) {\n  x += this.cursorPosition;\n  // reverse if right-to-left and using transform\n  x = this.options.rightToLeft ? -x : x;\n  var translateX = this.getPositionValue( x );\n  // use 3D transforms for hardware acceleration on iOS\n  // but use 2D when settled, for better font-rendering\n  this.slider.style.transform = is3d ?\n    'translate3d(' + translateX + ',0,0)' : 'translateX(' + translateX + ')';\n};\n\nproto.dispatchScrollEvent = function() {\n  var firstSlide = this.slides[0];\n  if ( !firstSlide ) {\n    return;\n  }\n  var positionX = -this.x - firstSlide.target;\n  var progress = positionX / this.slidesWidth;\n  this.dispatchEvent( 'scroll', null, [ progress, positionX ] );\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) {\n    return;\n  }\n  this.x = -this.selectedSlide.target;\n  this.velocity = 0; // stop wobble\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 ) + '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  var isResting = !this.isPointerDown &&\n      Math.round( this.x * 100 ) == Math.round( previousX * 100 );\n  if ( isResting ) {\n    this.restingFrames++;\n  }\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    this.positionSlider();\n    this.dispatchEvent( 'settle', null, [ this.selectedIndex ] );\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  var beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  var afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  for ( var i = 0; i < cells.length; i++ ) {\n    var cell = cells[i];\n    var cellShift = gap > 0 ? shift : 0;\n    cell.wrapShift( cellShift );\n    gap -= cell.size.outerWidth;\n  }\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  for ( var i = 0; i < cells.length; i++ ) {\n    cells[i].wrapShift( 0 );\n  }\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n};\n\nproto.applyForce = function( force ) {\n  this.velocity += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isDraggable || !this.isPointerDown ) {\n    return;\n  }\n  // change the position to drag position by applying force\n  var dragVelocity = this.dragX - this.x;\n  var dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no slides\n  var dragDown = this.isDraggable && this.isPointerDown;\n  if ( dragDown || this.isFreeScrolling || !this.slides.length ) {\n    return;\n  }\n  var distance = this.selectedSlide.target * -1 - this.x;\n  var force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}