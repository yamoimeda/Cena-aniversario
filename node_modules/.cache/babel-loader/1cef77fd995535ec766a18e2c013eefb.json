{"ast":null,"code":"// slide\n(function (window, factory) {\n  // universal module definition\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(factory);\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n})(window, function factory() {\n  'use strict';\n\n  function Slide(parent) {\n    this.parent = parent;\n    this.isOriginLeft = parent.originSide == 'left';\n    this.cells = [];\n    this.outerWidth = 0;\n    this.height = 0;\n  }\n\n  var proto = Slide.prototype;\n\n  proto.addCell = function (cell) {\n    this.cells.push(cell);\n    this.outerWidth += cell.size.outerWidth;\n    this.height = Math.max(cell.size.outerHeight, this.height); // first cell stuff\n\n    if (this.cells.length == 1) {\n      this.x = cell.x; // x comes from first cell\n\n      var beginMargin = this.isOriginLeft ? 'marginLeft' : 'marginRight';\n      this.firstMargin = cell.size[beginMargin];\n    }\n  };\n\n  proto.updateTarget = function () {\n    var endMargin = this.isOriginLeft ? 'marginRight' : 'marginLeft';\n    var lastCell = this.getLastCell();\n    var lastMargin = lastCell ? lastCell.size[endMargin] : 0;\n    var slideWidth = this.outerWidth - (this.firstMargin + lastMargin);\n    this.target = this.x + this.firstMargin + slideWidth * this.parent.cellAlign;\n  };\n\n  proto.getLastCell = function () {\n    return this.cells[this.cells.length - 1];\n  };\n\n  proto.select = function () {\n    this.cells.forEach(function (cell) {\n      cell.select();\n    });\n  };\n\n  proto.unselect = function () {\n    this.cells.forEach(function (cell) {\n      cell.unselect();\n    });\n  };\n\n  proto.getCellElements = function () {\n    return this.cells.map(function (cell) {\n      return cell.element;\n    });\n  };\n\n  return Slide;\n});","map":{"version":3,"sources":["C:/Users/LabJH/Documents/yamir/cit/minaposento/node_modules/flickity/js/slide.js"],"names":["window","factory","define","amd","module","exports","Flickity","Slide","parent","isOriginLeft","originSide","cells","outerWidth","height","proto","prototype","addCell","cell","push","size","Math","max","outerHeight","length","x","beginMargin","firstMargin","updateTarget","endMargin","lastCell","getLastCell","lastMargin","slideWidth","target","cellAlign","select","forEach","unselect","getCellElements","map","element"],"mappings":"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","sourcesContent":["// slide\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n\n}( window, function factory() {\n'use strict';\n\nfunction Slide( parent ) {\n  this.parent = parent;\n  this.isOriginLeft = parent.originSide == 'left';\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nvar proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length == 1 ) {\n    this.x = cell.x; // x comes from first cell\n    var beginMargin = this.isOriginLeft ? 'marginLeft' : 'marginRight';\n    this.firstMargin = cell.size[ beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  var endMargin = this.isOriginLeft ? 'marginRight' : 'marginLeft';\n  var lastCell = this.getLastCell();\n  var lastMargin = lastCell ? lastCell.size[ endMargin ] : 0;\n  var slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.parent.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.cells.forEach( function( cell ) {\n    cell.select();\n  } );\n};\n\nproto.unselect = function() {\n  this.cells.forEach( function( cell ) {\n    cell.unselect();\n  } );\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  } );\n};\n\nreturn Slide;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}